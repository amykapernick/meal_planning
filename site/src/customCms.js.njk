---
permalink: /js/customControls.js
eleventyExcludeFromCollections: true
---

const ingredientsControl = createClass({
  handleChange: function(e) {
    const separator = this.props.field.get('separator', '\n')
    this.props.onChange(e.target.value.split(separator).map((e) => e));
  },

  render: function() {
    const separator = this.props.field.get('separator', '\n');
    var value = this.props.value;
    return h('textarea', {
      id: this.props.forID,
      className: this.props.classNameWrapper,
      type: 'text',
      value: value ? value.join(separator) : '',
      onChange: this.handleChange,
    });
  },
});

const ingredientsPreview = createClass({
  render: function() {
    return h('ul', {},
      this.props.value.map(function(val, index) {
        return h('li', {key: index}, val);
      })
    );
  }
});

const schema = {
  properties: {
    separator: { type: 'string' },
  },
}

CMS.registerWidget('ingredients', ingredientsControl, ingredientsPreview, schema);
